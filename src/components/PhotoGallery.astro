---
import { Image } from "astro:assets";
import mainPhoto from '../assets/images/gallery_a.webp';
import photo1 from '../assets/images/gallery_view.webp';
import photo2 from '../assets/images/kitchen.webp';
import photo3 from '../assets/images/sofa_area.webp';
import photo4 from '../assets/images/dining_sofa.webp';

const allImages = await import.meta.glob<{ default: ImageMetadata }>('../assets/images/*.{jpeg,jpg,png,gif,JPG}');
const imagePaths = await Promise.all(
  Object.values(allImages).map(async (getImage) => {
    const image = await getImage();
    return image.default.src;
  })
);
---

<div class="container mx-auto p-4">
  <!-- Main Gallery Grid -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
    <div class="col-span-1 md:col-span-1">
      <Image inferSize={true} src={mainPhoto} alt="Main view of the apartment" class="rounded-lg object-cover w-full h-full" />
    </div>
    <div class="grid grid-cols-2 gap-2">
      <Image inferSize={true} src={photo1} alt="Gallery view" class="rounded-lg object-cover w-full h-full"/>
      <Image inferSize={true} src={photo2} alt="Kitchen" class="rounded-lg object-cover w-full h-full"/>
      <Image inferSize={true} src={photo3} alt="Sofa area" class="rounded-lg object-cover w-full h-full"/>
      <div class="relative">
        <Image inferSize={true} src={photo4} alt="Dining and Sofa" class="rounded-lg object-cover w-full h-full" />
        <div class="absolute inset-0 bg-slate-700/50 flex items-center justify-center rounded-lg">
          <button id="show-all-photos" class="btn">Show all photos</button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Modal -->
<div id="gallery-modal" class="fixed inset-0 bg-black bg-opacity-80 z-50 hidden items-center justify-center">
  <div class="relative w-11/12 h-5/6">
    <button id="close-modal" class="absolute top-0 right-0 m-4 text-white text-3xl z-50">&times;</button>
    <div class="flex items-center justify-center h-full">
      <button id="prev-photo" class="absolute left-0 ml-4 text-white text-3xl p-2 bg-black bg-opacity-50 rounded-full">&#10094;</button>
      <img id="modal-image" src="" alt="Full-size view" class="max-h-full max-w-full object-contain" />
      <button id="next-photo" class="absolute right-0 mr-4 text-white text-3xl p-2 bg-black bg-opacity-50 rounded-full">&#10095;</button>
    </div>
  </div>
</div>

<script define:vars={{ imagePaths }}>
  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('gallery-modal');
    const modalImage = document.getElementById('modal-image');
    const showButton = document.getElementById('show-all-photos');
    const closeButton = document.getElementById('close-modal');
    const prevButton = document.getElementById('prev-photo');
    const nextButton = document.getElementById('next-photo');

    let currentIndex = 0;

    const updateImage = () => {
      modalImage.src = imagePaths[currentIndex];
    };

    showButton.addEventListener('click', () => {
      currentIndex = 0;
      updateImage();
      modal.classList.remove('hidden');
      modal.classList.add('flex');
    });

    closeButton.addEventListener('click', () => {
      modal.classList.add('hidden');
      modal.classList.remove('flex');
    });

    nextButton.addEventListener('click', () => {
      currentIndex = (currentIndex + 1) % imagePaths.length;
      updateImage();
    });

    prevButton.addEventListener('click', () => {
      currentIndex = (currentIndex - 1 + imagePaths.length) % imagePaths.length;
      updateImage();
    });

    // Close modal on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
        closeButton.click();
      }
    });
  });
</script>
