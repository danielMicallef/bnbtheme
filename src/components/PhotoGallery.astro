---
import { Image, getImage } from "astro:assets";
import mainPhoto from '../assets/images/01_gallery_a.webp';
import photo1 from '../assets/images/02_gallery_view.webp';
import photo2 from '../assets/images/03_kitchen.webp';
import photo3 from '../assets/images/04_sofa_area.webp';
import photo4 from '../assets/images/07_dining_sofa.webp';

// Find all image types, not just webp
const allImageFiles = await import.meta.glob<{ default: ImageMetadata }>('../assets/images/*.{jpeg,jpg,png,gif,JPG,webp}');

// Process each image to get its full responsive attributes for the modal
const imagesData = await Promise.all(
  Object.values(allImageFiles).map(async (importImage) => {
    const imageModule = await importImage();
    const processedImage = await getImage({ 
      src: imageModule.default, 
      format: 'webp',
      // Define widths for the modal's responsive images
      widths: [400, 800, 1200, 1600, 2400],
    });
    return {
      src: processedImage.src,
      srcset: processedImage.attributes.srcset,
      // The modal image takes up the full viewport width
      sizes: '100vw' 
    };
  })
);
---

<div x-data={`{
    isOpen: false,
    currentIndex: 0,
    images: ${JSON.stringify(imagesData)},
    nextImage() {
        this.currentIndex = (this.currentIndex + 1) % this.images.length;
    },
    prevImage() {
        this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;
    },
    openModal(index) {
        this.currentIndex = index;
        this.isOpen = true;
    }
}`}
x-init="() => {
    window.addEventListener('load', () => {
        // Preload images with their full srcset for better performance
        images.forEach(imgData => {
            const img = new Image();
            img.src = imgData.src;
            img.srcset = imgData.srcset;
            img.sizes = imgData.sizes;
        });
    });
}"
@keydown.escape.window="isOpen = false"
@keydown.arrow-right.window="if (isOpen) nextImage()"
@keydown.arrow-left.window="if (isOpen) prevImage()"
>
    <div class="container mx-auto p-4">
        <!-- Main Gallery Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
            <div class="col-span-1 md:col-span-1">
                <Image 
                    src={mainPhoto} 
                    widths={[400, 800, 1200, 1600]}
                    sizes="(max-width: 768px) 100vw, 50vw"
                    alt="Main view of the apartment"
                    priority={true} 
                    class="rounded-lg object-cover w-full h-full" />
            </div>
            <div class="grid grid-cols-2 gap-2">
                <Image 
                    src={photo1} 
                    widths={[200, 400, 800]}
                    sizes="(max-width: 768px) 50vw, 25vw"
                    alt="Gallery view"
                    priority={true} 
                    class="rounded-lg object-cover w-full h-full"/>
                <Image 
                    src={photo2} 
                    widths={[200, 400, 800]}
                    sizes="(max-width: 768px) 50vw, 25vw"
                    alt="Kitchen" 
                    priority={true}
                    class="rounded-lg object-cover w-full h-full"/>
                <Image 
                    src={photo3} 
                    widths={[200, 400, 800]}
                    sizes="(max-width: 768px) 50vw, 25vw"
                    alt="Sofa area" 
                    priority={true}
                    class="rounded-lg object-cover w-full h-full"/>
                <div class="relative">
                    <Image 
                        src={photo4} 
                        widths={[200, 400, 800]}
                        sizes="(max-width: 768px) 50vw, 25vw"
                        alt="Dining and Sofa"
                        priority={true} 
                        class="rounded-lg object-cover w-full h-full" />
                    <div class="absolute inset-0 bg-slate-700/50 flex items-center justify-center rounded-lg">
                        <button @click="openModal(0)" class="btn">Show all photos</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div 
        x-show="isOpen" 
        x-transition
        class="fixed inset-0 bg-black bg-opacity-80 z-50 flex items-center justify-center"
        style="display: none;"
    >
        <div class="relative w-11/12 h-5/6">
            <button @click="isOpen = false" class="absolute top-0 right-0 m-4 text-white text-3xl z-50">&times;</button>
            <div class="flex items-center justify-center h-full">
                <button @click="prevImage()" class="absolute left-0 ml-4 text-white text-3xl p-2 bg-black bg-opacity-50 rounded-full">&#10094;</button>
                <template x-if="images.length > 0">
                    <img 
                        :src="images[currentIndex].src" 
                        :srcset="images[currentIndex].srcset"
                        :sizes="images[currentIndex].sizes"
                        alt="Full-size view" 
                        class="max-h-full max-w-full object-contain" 
                    />
                </template>
                <button @click="nextImage()" class="absolute right-0 mr-4 text-white text-3xl p-2 bg-black bg-opacity-50 rounded-full">&#10095;</button>
            </div>
        </div>
    </div>
</div>
